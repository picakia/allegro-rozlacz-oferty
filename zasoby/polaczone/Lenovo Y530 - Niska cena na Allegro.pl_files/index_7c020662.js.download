!function(){"use strict";var t,e={};function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}t=e,"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0});var i=function(t){return t.CART_CAPACITY_EXCEEDED="OFFER_CART_CAPACITY_EXCEEDED",t}({}),a="application/vnd.allegro.public.v5+json",o=function(t){return t.code===i.CART_CAPACITY_EXCEEDED},u=function(t){return function(e){return window.opbox.edge.post("/carts/changeQuantityCommand",{items:e},{headers:{Accept:a,"Content-Type":a},withCredentials:!0}).catch((function(e){var r=e.status,n=e.data;if(422===r&&n&&n.errors&&n.errors.find(o))return window.location.assign("/".concat(t,"?error=CART_CAPACITY_EXCEEDED"));throw Error("Failed to add to cart. Status: ".concat(r,". Data: ").concat(JSON.stringify(n),"."))}))}},s=Error("Failed to render precart layer"),c={showPrecartLayer:!1},l=function(){function t(e){var r=this,n=e.window,i=e.props;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.quantityChangeListeners=void 0,this.window=void 0,this.props=void 0,this.changeQuantity=void 0,this.changeItems=function(t,e){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:c).showPrecartLayer;return r.changeQuantity(t).then((function(){var i=t.reduce((function(t,e){return t+e.delta}),0);return r.triggerQuantityChangeListeners(i),n?r.window.opbox.page.render.fragment({pathname:r.props.precartLayerUrl,additionalQueryParameters:e}).catch((function(){r.window.opbox.reportError(s)})):Promise.resolve()})).catch((function(t){throw r.window.opbox.reportError(t),t}))},this.addOffer=function(t,e){return r.addOffers([t],e)},this.addOffers=function(t,e){return r.changeItems(t.map((function(t){var e=t.itemId,r=t.quantity,n=t.sellerId,i=t.category;return{itemId:e,delta:r,sellerId:n,navCategoryId:i&&i.id,navTree:i&&i.tree}})),{precartOfferId:t.map((function(t){return t.itemId})),precartSellerId:t[0].sellerId,itemQuantity:t.map((function(t){var e=t.itemId,r=t.quantity;return"".concat(e,":").concat(r)}))},e)},this.removeOffer=function(t){var e=t.itemId,n=t.quantity,i=t.sellerId,a=t.allowDelete;return r.changeItems([Object.assign({itemId:e,delta:-1*n,sellerId:i},!0===a&&{allowDelete:a})])},this.addBundle=function(t,e){var n=t.bundleMainItemId,i=t.quantity,a=t.sellerId,o=t.rebateId,u=t.itemsIds;return r.changeItems([{itemId:n,delta:i,sellerId:a,rebateId:o}],{precartOfferId:u,precartSellerId:a,rebateId:o,quantity:i.toString(10)},e)},this.triggerQuantityChangeListeners=function(t){r.quantityChangeListeners.forEach((function(e){return e(t)}))},this.registerQuantityChangeListener=function(t){r.quantityChangeListeners.push(t)},this.unregisterQuantityChangeListener=function(t){r.quantityChangeListeners=r.quantityChangeListeners.filter((function(e){return e!==t}))},this.window=n,this.quantityChangeListeners=[],this.props=i,this.changeQuantity=u(this.getCartPathname())}var e,i;return e=t,(i=[{key:"getCartPathname",value:function(){var t,e=(t=this.props.precartLayerUrl.split("/"),function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,u=[],s=!0,c=!1;try{for(a=(r=r.call(t)).next;!(s=(n=a.call(r)).done)&&(u.push(n.value),2!==u.length);s=!0);}catch(t){c=!0,i=t}finally{try{if(!s&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(c)throw i}}return u}}(t)||function(t,e){if(t){if("string"==typeof t)return r(t,2);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,2):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[1];return void 0===e?"koszyk":e}},{key:"getPublicApi",value:function(){return{addBundle:this.addBundle,addOffer:this.addOffer,addOffers:this.addOffers,removeOffer:this.removeOffer,registerQuantityChangeListener:this.registerQuantityChangeListener,unregisterQuantityChangeListener:this.unregisterQuantityChangeListener}}}])&&function(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return t+""}(i.key),"symbol"===n(a)?a:a+""),i)}var a}(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}(),d=function(t){try{return JSON.parse(window.document.querySelector('script[data-serialize-plugin-name="cart"][data-civ="030"]').textContent)}catch(t){return window.opbox.reportError(Error('Missing serialized props of plugin "cart", with civ "030"')),{}}}().cartConfiguration;d&&window.opbox.plugin.register({name:"cart"},new l({window:window,props:d}).getPublicApi());var f=window;for(var y in e)f[y]=e[y];e.__esModule&&Object.defineProperty(f,"__esModule",{value:!0})}();
//# sourceMappingURL=index_7c020662.js.map